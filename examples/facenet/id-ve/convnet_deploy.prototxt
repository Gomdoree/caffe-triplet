name: "convnet_train_test"
input: "pair_data"
input_dim: 1
input_dim: 6
input_dim: 55
input_dim: 47
input: "label"
input_dim: 1
input_dim: 1
input_dim: 1
input_dim: 1
layers {
    name: "slice_pair"
    type: SLICE
    bottom: "pair_data"
    top: "data"
    top: "data_p"
    slice_param {
        slice_dim: 1
        slice_point: 3
    }
}

layers {
  name: "conv1"
  type: CONVOLUTION
  bottom: "data"
  top: "conv1"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 20
    kernel_size: 4
    stride: 1
  }
}
layers{
  name:"relu1"
  type:RELU
  bottom:"conv1"
  top:"conv1"
}
layers {
  name: "pool1"
  type: POOLING
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  name: "conv2"
  type: CONVOLUTION
  bottom: "pool1"
  top: "conv2"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 40
    kernel_size: 3
    stride: 1
  }
}
layers{
  name:"relu2"
  type:RELU
  bottom:"conv2"
  top:"conv2"
}
layers {
  name: "pool2"
  type: POOLING
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  name: "conv3"
  type: CONVOLUTION
  bottom: "pool2"
  top: "conv3"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 60
    kernel_size: 3
    stride: 1
  }
}
layers{
  name:"relu3"
  type:RELU
  bottom:"conv3"
  top:"conv3"
}
layers {
  name: "pool3"
  type: POOLING
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers{
  name:"flatten3"
  type: FLATTEN
  bottom:"pool3"
  top:"flatten3"
}
layers {
  name: "conv4"
  type: CONVOLUTION
  bottom: "pool3"
  top: "conv4"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 80
    kernel_size: 2
    stride: 1
  }
}
layers{
  name:"relu4"
  type:RELU
  bottom:"conv4"
  top:"conv4"
}
layers{
  name:"flatten4"
  type: FLATTEN
  bottom:"conv4"
  top:"flatten4"
}
layers{
  name:"concat"
  type:CONCAT
  bottom:"flatten3"
  bottom:"flatten4"
  top:"concat_out"
  concat_param{
     concat_dim:1
  }
}
layers {
  name: "deepId2"
  type: INNER_PRODUCT
  bottom: "concat_out"
  top: "deepId2"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 160
  }
}
layers{
  name:"relu_deep"
  type:RELU
  bottom:"deepId2"
  top:"deepId2"
}

layers {
  name: "conv1_p"
  type: CONVOLUTION
  bottom: "data_p"
  top: "conv1_p"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 20
    kernel_size: 4
    stride: 1
  }
}
layers{
  name:"relu1_p"
  type:RELU
  bottom:"conv1_p"
  top:"conv1_p"
}
layers {
  name: "pool1_p"
  type: POOLING
  bottom: "conv1_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  name: "conv2_p"
  type: CONVOLUTION
  bottom: "pool1_p"
  top: "conv2_p"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 40
    kernel_size: 3
    stride: 1
  }
}
layers{
  name:"relu2_p"
  type:RELU
  bottom:"conv2_p"
  top:"conv2_p"
}
layers {
  name: "pool2_p"
  type: POOLING
  bottom: "conv2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  name: "conv3_p"
  type: CONVOLUTION
  bottom: "pool2_p"
  top: "conv3_p"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 60
    kernel_size: 3
    stride: 1
  }
}
layers{
  name:"relu3_p"
  type:RELU
  bottom:"conv3_p"
  top:"conv3_p"
}
layers {
  name: "pool3_p"
  type: POOLING
  bottom: "conv3_p"
  top: "pool3_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers{
  name:"flatten3_p"
  type: FLATTEN
  bottom:"pool3_p"
  top:"flatten3_p"
}
layers {
  name: "conv4_p"
  type: CONVOLUTION
  bottom: "pool3_p"
  top: "conv4_p"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 80
    kernel_size: 2
    stride: 1
  }
}

layers{
  name:"relu4_p"
  type:RELU
  bottom:"conv4_p"
  top:"conv4_p"
}
layers{
  name:"flatten4_p"
  type: FLATTEN
  bottom:"conv4_p"
  top:"flatten4_p"
}
layers{
  name:"concat_p"
  type:CONCAT
  bottom:"flatten3_p"
  bottom:"flatten4_p"
  top:"concat_out_p"
  concat_param{
     concat_dim:1
  }
}
layers {
  name: "deepId2_p"
  type: INNER_PRODUCT
  bottom:"concat_out_p"
  top: "deepId2_p"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 160
  }

}
layers{
  name:"relu_deep_p"
  type:RELU
  bottom:"deepId2_p"
  top:"deepId2_p"
}
#There needs a new layer which calculate the identification loss and verification loss

#The loss layer need to be modified
layers {
    name: "loss"
    type: VE_LOSS
    bottom: "deepId2"
    bottom: "deepId2_p"
    bottom: "label"
    top: "loss"
    top: "prob_a"
    top: "prob_b"
    loss_weight:1
    loss_weight:0
    loss_weight:0
    blobs_lr: 1
    blobs_lr: 2
    ve_loss_param {
        margin: 5.0
        lamdba: 0.05
        num_output: 1715
      }
}
layers {
  name: "accuracy"
  type: ACCURACY2
  bottom: "prob_a"
  bottom: "prob_b"
  bottom: "label"
  top: "accuracy"
}
layers {
  name: "joint_bayesian"
  type: JOINT_BAYESIAN
  bottom: "deepId2"
  bottom: "deepId2_p"
  top: "the_same"
}
